{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/menu.js","webpack:///./src/components/links.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","menu","_ref","isMenuOpen","toggleMenu","items","react_default","onMouseOver","onMouseOut","className","href","gatsby_browser_entry","to","map","_ref2","idx","_ref2$item","item","label","url","key","Links","_this$props","this","page","isActive","route","startsWith","slice","stripLeadingSlash","classNames","active","Component","Header","state","menuState","_this","setState","_this2","_classNames","open","allLinksYaml","edges","_ref$node$navigation","node","navigation","type","links","_3206971757","Footer","id","title","_2346221188","Layout","metaData","allMetaYaml","reduce","prev","meta","Fragment","Helmet_default","header_Header","_537182658","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-c1989aa9df357a6bda2c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default ({ data, isMenuOpen, toggleMenu, items }) => {\n  // const title = data.site.siteMetadata.title\n  const title = 'VIS.GL';\n  return (\n    <div\n      onMouseOver={() => toggleMenu(true)}\n      onMouseOut={() => toggleMenu(false)}\n    >\n      <h1>\n        <a className=\"logo\" href=\"/\">\n          {title}\n        </a>\n      </h1>\n      <div className=\"site-links\">\n        <div className=\"site-link\">\n          <Link className=\"logo\" to=\"/\">{title}</Link>\n        </div>\n        <div>\n          {items.map(({ item: { label, url } }, idx) => (\n            <div className=\"site-link\" key={idx}>\n              <a href={url}>{label}</a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport classNames from 'classnames';\n\nclass Links extends Component {\n  render() {\n    const { items, page } = this.props;\n    return (\n      <div className=\"links f\">\n        {items.map(({ item }, idx) => {\n          const isActive = item.route && stripLeadingSlash(item.route) === page;\n          return item.route ? (\n            <Link\n              to={item.route}\n              key={idx}\n              className={classNames({ active: isActive })}\n            >\n              {item.label}\n            </Link>\n          ) : (\n            <a href={item.url} key={idx}>\n              {item.label}\n            </a>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction stripLeadingSlash(route) {\n  if (route.startsWith('/')) {\n    return route.slice(1);\n  }\n  return route;\n}\n\nexport default Links;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Menu from './menu';\nimport Links from './links';\n\nexport default class Header extends Component {\n  state = {\n    isMenuOpen: false,\n  };\n  toggleMenu = menuState => {\n    this.setState({ isMenuOpen: menuState });\n  };\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            allLinksYaml {\n              edges {\n                node {\n                  navigation {\n                    type\n                    items {\n                      item {\n                        active\n                        label\n                        url\n                        route\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => {\n          const { isMenuOpen } = this.state;\n          return (\n            <header\n              className={classNames({\n                open: isMenuOpen,\n                [this.props.page]: true,\n              })}\n            >\n              <div className=\"f container ph2\">\n                {data.allLinksYaml.edges.map(\n                  (\n                    {\n                      node: {\n                        navigation: { type, items },\n                      },\n                    },\n                    idx\n                  ) => {\n                    switch (type) {\n                      case 'MENU':\n                        return (\n                          <Menu\n                            key={idx}\n                            isMenuOpen={isMenuOpen}\n                            items={items}\n                            page={this.props.page}\n                            toggleMenu={this.toggleMenu}\n                          />\n                        );\n                      case 'LINKS':\n                        return (\n                          <Links\n                            key={idx}\n                            items={items}\n                            page={this.props.page}\n                          />\n                        );\n                      default:\n                        return null;\n                    }\n                  }\n                )}\n              </div>\n            </header>\n          );\n        }}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { StaticQuery, graphql } from 'gatsby';\n\nexport default function Footer() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allLinksYaml {\n            edges {\n              node {\n                navigation {\n                  type\n                  title\n                  items {\n                    item {\n                      active\n                      label\n                      url\n                      route\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <footer id=\"Footer\">\n            <div className=\"content\">\n              <div className=\"main\">\n                <h1>\n                  <Link to=\"/\">{'VIS.GL'}</Link>\n                </h1>\n                <p>\n                  The Visualization Suite is brought to you by the Uber\n                  Visualization team. We re always looking for talent to do\n                  great work, so do not hesitate to get in touch!\n                </p>\n              </div>\n              {data.allLinksYaml.edges.map(({node: {navigation}}) => (\n                <div className=\"links\" key={navigation.title}>\n                  <div className=\"label\">{navigation.title}</div>\n                  <ul>\n                  {navigation.items.map(({item}) => (\n                      <li key={item.label}>\n                        {item.route ? (\n                          <Link to={item.route}>{item.label}</Link>\n                        ) : (\n                          <a href={item.url}>{item.label}</a>\n                        )}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          </footer>\n        );\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\n\nimport './layout.css';\nimport Footer from './footer';\n\nconst Layout = ({ page, children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMetaYaml {\n          edges {\n            node {\n              page\n              title\n              meta {\n                name\n                content\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const metaDataResolver = data.allMetaYaml.edges.reduce(\n        (prev, { node }) => {\n          prev[node.page] = node;\n          return prev;\n        },\n        {}\n      );\n      const metaData = metaDataResolver[page] || { title: '', meta: [] };\n      return (\n        <>\n          <Helmet title={metaData.title} meta={metaData.meta} />\n          <Header page={page} />\n          <div className=\"page\">{children}</div>\n          <Footer />\n        </>\n      );\n    }}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  page: PropTypes.string,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}